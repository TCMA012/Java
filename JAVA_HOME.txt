running build.cmd:
SET JAVA_HOME=C:\APPS\java\jdk1.8.0_231_x64

SET JAVA_HOME=C:\APPS\java\jdk1.8.0_152
CALL "C:\APPS\WLS12213\wlserver\server\bin\setWLSEnv.cmd"


JAVA_HOME=C:\APPS\java\jdk1.8.0_231_x64


JRE_HOME=%JAVA_HOME%\jre

java -version
java version "1.8.0_152"
Java(TM) SE Runtime Environment (build 1.8.0_152-b16)
Java HotSpot(TM) 64-Bit Server VM (build 25.152-b16, mixed mode)

ant -version

!!!

JAVA_HOME
C:\APPS\java\jdk1.8.0_152
set JAVA_HOME=C:\APPS\java\jdk1.8.0_152
set JAVA_HOME=C:\APPS\java\jdk1.8.0_152\bin

SET PATH=%PATH%;%JAVA_HOME%\bin


java -version

%JAVA_HOME%\bin



???
Without running build.cmd
java -version
H:\>java -version
java version "1.8.0_202"
Java(TM) SE Runtime Environment (build 1.8.0_202-b08)
Java HotSpot(TM) 64-Bit Server VM (build 25.202-b08, mixed mode)

???

!!!

How to install Maven:
Browse to the location of your JDK or JRE. 
From the /jre/lib/security folder, edit java.security
Change keystore.type=jks to keystore.type=Windows-ROOT. This change will make your JVM to leverage the Windows key store.
...

!!!

I set the Windows environment variable
JAVA_HOME
to
C:\APPS\java\jdk1.8.0_152

After my computer, this Windows environment variable JAVA_HOME disappear.

How to fix it?

Do I need Administrator rights to set my Windows environment variable for user txm076?

---

ant -version

---

When working with Eclipse the default setting points to your JRE installation.
So, one of your first steps after starting Eclipse for the first time should be :
Window > Preferences > Installed JREs and change the settings from JRE to JDK.
C:\APPS\java\jdk1.8.0_152


Buildfile: C:\git\common-19-R3Spr-dev\implementation\build.xml
init:
     [echo] Using Java Version: 1.8.0_172
clean:
   [delete] Deleting C:\git\common-19-R3Spr-dev\implementation\build\classes
component_compile:
    [mkdir] Created dir: C:\git\common-19-R3Spr-dev\implementation\build\classes
    [javac] C:\git\common-19-R3Spr-dev\implementation\build.xml:141: warning: 'includeantruntime' was not set, defaulting to build.sysclasspath=last; set to false for repeatable builds

BUILD FAILED
C:\git\common-19-R3Spr-dev\implementation\build.xml:141: Unable to find a javac compiler;
com.sun.tools.javac.Main is not on the classpath.
Perhaps JAVA_HOME does not point to the JDK.
It is currently set to "C:\Program Files\Java\jre1.8.0_172"

Total time: 417 milliseconds

---

???
C:\Program Files\Eclipse_IDE_Mars_452
$ECLIPSE_HOME/eclipse.ini

Eclipse doesn't consult the JAVA_HOME variable
You should specify where Eclipse should find your JDK in the file eclipse.ini. Specifically, the following parameter (note that it is 2 separate lines in the ini file):
-vm
C:\APPS\java\jdk1.8.0_152\bin\javaw.exe

-vm
C:\Program Files\Java\jdk1.8\bin\javaw.exe

C:\Java\JDK\1.8\bin\javaw.exe

???

Window -> Preferences -> Java -> Installed JRE's tab.
In the project build path configuration dialog, under the libraries tab, you can delete the entry for "JRE System Library", click on "Add Library" and choose the installed JRE to compile with.
